{"version":3,"file":"element.min.js","sources":["../../../../src/app/block/item/element.js"],"sourcesContent":["import ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Notification from \"core/notification\";\nimport {get_strings} from \"core/str\";\nimport Ajax from \"core/ajax\";\n\nconst polls = [];\n\nexport default class ItemElement {\n    /**\n     * @type {BaseFactory}\n     */\n    #baseFactory;\n\n    /**\n     * @type {BlockElement}\n     */\n    #blockElement;\n\n    /**\n     * @type {HTMLElement}\n     */\n    #element;\n\n    /**\n     * @param {BaseFactory} baseFactory\n     * @param {BlockElement} blockElement\n     * @param {HTMLElement} element\n     */\n    constructor(baseFactory, blockElement, element) {\n        this.#baseFactory = baseFactory;\n        this.#blockElement = blockElement;\n        this.#element = element;\n\n        if (this.#element.dataset.status === '0') {\n            this.#pollItem();\n        }\n\n        this.#addEventListeners();\n    }\n\n    #pollItem(currentTry = 0, retries = -1, uuid = null) {\n        if (uuid === null) {\n            uuid = crypto.randomUUID();\n\n            if (polls[this.getItemId()]) {\n                return;\n            }\n\n            polls[this.getItemId()] = uuid;\n        } else if (polls[this.getItemId()] !== uuid) {\n            return;\n        }\n\n        currentTry += 1;\n\n        if (retries !== -1 && currentTry >= retries) {\n            return;\n        }\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_get_item_from_sharing_cart',\n            args: {\n                item_id: this.getItemId(),\n                course_id: M.cfg.courseId\n            },\n            done: async(item) => {\n                const actionsContainer = this.#element.querySelector(':scope > .item-body .sharing_cart_item_actions');\n                const runNowButton = actionsContainer?.querySelector('[data-action=\"run_now\"]');\n                if (!runNowButton && item.show_run_now) {\n                    await this.#blockElement.renderItem(item);\n                }\n\n                if (item.status === 0) {\n                    // Cap the timeout at 10 seconds\n                    const timeOut = currentTry > 10 ? 10000 : currentTry * 1000;\n\n                    setTimeout(() => {\n                        this.#pollItem(currentTry, retries, uuid);\n                    }, timeOut);\n                    return;\n                }\n\n                // Remove the item from the polls array\n                polls.splice(this.getItemId(), 1);\n\n                await this.#blockElement.renderItem(item);\n            },\n            fail: (data) => {\n                Notification.exception(data);\n            }\n        }]);\n    }\n\n    #addEventListeners() {\n        this.#element.querySelector('.info').addEventListener('click', this.toggleCollapseRecursively.bind(this));\n\n        const checkbox = this.#element.querySelector('input[data-action=\"bulk_select\"][type=\"checkbox\"]');\n        checkbox?.addEventListener('click', (e) => {\n            e.stopImmediatePropagation();\n\n            this.#blockElement.updateSelectAllState();\n            this.#blockElement.updateBulkDeleteButtonState();\n        });\n\n        const actionsContainer = this.#element.querySelector(':scope > .item-body .sharing_cart_item_actions');\n\n        actionsContainer?.querySelector('[data-action=\"delete\"]')?.addEventListener(\n            'click',\n            this.confirmDeleteItem.bind(this)\n        );\n        actionsContainer?.querySelector('[data-action=\"copy_to_course\"]')?.addEventListener(\n            'click',\n            this.copyItemToCourse.bind(this)\n        );\n        actionsContainer?.querySelector('[data-action=\"run_now\"]')?.addEventListener(\n            'click',\n            this.runNow.bind(this)\n        );\n    }\n\n    async copyItemToCourse(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        await this.#blockElement.setClipboard(this);\n    }\n\n    async runNow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        const currentTarget = e.currentTarget;\n        currentTarget.disabled = true;\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_run_task_now',\n            args: {\n                task_id: currentTarget?.dataset?.taskId ?? null,\n            },\n            done: async () => {\n                currentTarget.remove();\n                this.#pollItem();\n            },\n            fail: (data) => {\n                Notification.exception(data);\n                currentTarget.disabled = false;\n            }\n        }]);\n    }\n\n    async confirmDeleteItem(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        const strings = await get_strings([\n            {\n                key: 'delete_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'confirm_delete_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'delete',\n                component: 'core',\n            },\n            {\n                key: 'cancel',\n                component: 'core',\n            }\n        ]);\n\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.DELETE_CANCEL,\n            title: strings[0] + ': \"' + this.getItemName().slice(0, 50).trim() + '\"',\n            body: strings[1],\n            buttons: {\n                delete: strings[2],\n                cancel: strings[3],\n            },\n            removeOnClose: true,\n        });\n        modal.getRoot().on(ModalEvents.delete, this.#blockElement.deleteItem.bind(this.#blockElement, this));\n        await modal.show();\n    }\n\n    /**\n     * @return {NodeListOf<HTMLElement>}\n     */\n    getItemChildrenRecursively() {\n        return this.#element.querySelectorAll('.sharing_cart_item');\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n    getItemElement() {\n        return this.#element;\n    }\n\n    getStatus() {\n        return this.#element.dataset.status;\n    }\n\n    /**\n     * @return {String}\n     */\n    getItemName() {\n        return this.#element.querySelector('.name').innerText;\n    }\n\n    /**\n     * @return {Number}\n     */\n    getItemId() {\n        return Number.parseInt(this.#element.dataset.itemid);\n    }\n\n    /**\n     * @return {Number}\n     */\n    getItemOldInstanceId() {\n        return Number.parseInt(this.#element.dataset.oldinstanceid);\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n    getItemInfo() {\n        return this.#element.querySelector('.info');\n    }\n\n    /**\n     * @param {HTMLElement} item\n     * @param {Boolean|NULL} collapse\n     */\n    toggleCollapse(item, collapse = null) {\n        if (item.dataset.type !== 'section' &&\n            item.dataset.status !== '0' &&\n            item.dataset.status !== '2') {\n            return;\n        }\n\n        if (collapse !== null) {\n            item.dataset.collapsed = collapse ? 'true' : 'false';\n        } else {\n            item.dataset.collapsed = item.dataset.collapsed === 'true' ? 'false' : 'true';\n        }\n\n        const iconElement = item.querySelector('.info > i');\n        if (\n            !iconElement.classList.contains('fa-exclamation-triangle') &&\n            !iconElement.classList.contains('fa-exclamation-circle')\n        ) {\n            iconElement.classList.remove('fa-folder-o', 'fa-folder-open-o');\n            iconElement.classList.add(item.dataset.collapsed === 'true' ? 'fa-folder-o' : 'fa-folder-open-o');\n        }\n    }\n\n    isModule() {\n        return !this.isSection();\n    }\n\n    isSection() {\n        return this.#element.dataset.type === 'section';\n    }\n\n    /**\n     * @param {Event} e\n     */\n    toggleCollapseRecursively(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        if (this.isModule() || this.#element.dataset.status !== '1') {\n            return;\n        }\n\n        this.toggleCollapse(this.#element);\n        this.getItemChildrenRecursively().forEach((item) => {\n            this.toggleCollapse(item, this.#element.dataset.collapsed === 'true');\n        });\n    }\n\n    remove() {\n        this.#element.remove();\n    }\n}\n"],"names":["polls","currentTry","retries","uuid","crypto","randomUUID","this","getItemId","call","methodname","args","item_id","course_id","M","cfg","courseId","done","async","actionsContainer","_classPrivateFieldGet","querySelector","item","show_run_now","renderItem","status","splice","setTimeout","fail","data","exception","addEventListener","toggleCollapseRecursively","bind","checkbox","e","stopImmediatePropagation","updateSelectAllState","updateBulkDeleteButtonState","confirmDeleteItem","copyItemToCourse","runNow","constructor","baseFactory","blockElement","element","dataset","preventDefault","stopPropagation","setClipboard","currentTarget","disabled","task_id","_currentTarget$datase2","taskId","remove","strings","key","component","modal","ModalFactory","create","type","types","DELETE_CANCEL","title","getItemName","slice","trim","body","buttons","delete","cancel","removeOnClose","getRoot","on","ModalEvents","deleteItem","show","getItemChildrenRecursively","querySelectorAll","getItemElement","getStatus","innerText","Number","parseInt","itemid","getItemOldInstanceId","oldinstanceid","getItemInfo","toggleCollapse","collapse","collapsed","iconElement","classList","contains","add","isModule","isSection","forEach"],"mappings":"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"}